<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2015r4

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:agt="http://www.altova.com/Mapforce/agt" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="agt xs">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template name="agt:MapToDeterministic_CanAccA_var15_create_rec">
		<xsl:param name="var14_current"/>
		<rec>
			<xsl:variable name="var1_PortNumber">
				<xsl:if test="$var14_current/@PortNumber">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var1_PortNumber))) != 'false'">
				<xsl:attribute name="PortNumber">
					<xsl:value-of select="string($var14_current/@PortNumber)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var2_AccNumber">
				<xsl:if test="$var14_current/@AccNumber">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var2_AccNumber))) != 'false'">
				<xsl:attribute name="AccNumber">
					<xsl:value-of select="string($var14_current/@AccNumber)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var3_AccCurrency">
				<xsl:if test="$var14_current/@AccCurrency">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var3_AccCurrency))) != 'false'">
				<xsl:attribute name="AccCurrency">
					<xsl:value-of select="string($var14_current/@AccCurrency)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var4_PolNumber">
				<xsl:if test="$var14_current/@PolNumber">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var4_PolNumber))) != 'false'">
				<xsl:attribute name="PolNumber">
					<xsl:value-of select="string($var14_current/@PolNumber)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var5_PolPerilsCovered">
				<xsl:if test="$var14_current/@PolPerilsCovered">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var5_PolPerilsCovered))) != 'false'">
				<xsl:attribute name="PolPerilsCovered">
					<xsl:value-of select="string($var14_current/@PolPerilsCovered)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var6_LayerNumber">
				<xsl:if test="$var14_current/@LayerNumber">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var6_LayerNumber))) != 'false'">
				<xsl:attribute name="LayerNumber">
					<xsl:value-of select="string($var14_current/@LayerNumber)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var7_LayerParticipation">
				<xsl:if test="$var14_current/@LayerParticipation">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var7_LayerParticipation))) != 'false'">
				<xsl:attribute name="LayerParticipation">
					<xsl:value-of select="string($var14_current/@LayerParticipation)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var8_LayerLimit">
				<xsl:if test="$var14_current/@LayerLimit">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var8_LayerLimit))) != 'false'">
				<xsl:attribute name="LayerLimit">
					<xsl:value-of select="string($var14_current/@LayerLimit)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var9_LayerAttachment">
				<xsl:if test="$var14_current/@LayerAttachment">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var9_LayerAttachment))) != 'false'">
				<xsl:attribute name="LayerAttachment">
					<xsl:value-of select="string($var14_current/@LayerAttachment)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var10_PolDedAll">
				<xsl:if test="$var14_current/@PolDed6All">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var10_PolDedAll))) != 'false'">
				<xsl:attribute name="PolDed6All">
					<xsl:value-of select="string($var14_current/@PolDed6All)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var11_PolMinDedAll">
				<xsl:if test="$var14_current/@PolMinDed6All">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var11_PolMinDedAll))) != 'false'">
				<xsl:attribute name="PolMinDed6All">
					<xsl:value-of select="string($var14_current/@PolMinDed6All)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var12_PolMaxDedAll">
				<xsl:if test="$var14_current/@PolMaxDed6All">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var12_PolMaxDedAll))) != 'false'">
				<xsl:attribute name="PolMaxDed6All">
					<xsl:value-of select="string($var14_current/@PolMaxDed6All)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var13_CondNumber">
				<xsl:if test="$var14_current/@CondNumber">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var13_CondNumber))) != 'false'">
				<xsl:attribute name="CondNumber">
					<xsl:value-of select="string($var14_current/@CondNumber)"/>
				</xsl:attribute>
			</xsl:if>
		</rec>
	</xsl:template>
	<xsl:template name="agt:MapToDeterministic_CanAccA_var17_resultof_map">
		<xsl:param name="var16_current"/>
		<xsl:for-each select="$var16_current/rec">
			<xsl:call-template name="agt:MapToDeterministic_CanAccA_var15_create_rec">
				<xsl:with-param name="var14_current" select="."/>
			</xsl:call-template>
		</xsl:for-each>
	</xsl:template>
	<xsl:template match="/">
		<root>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">C:/Users/Administrator/Desktop/git/Deterministic-Model-Test/flamingo/ValidationFiles/Deterministic_CanAccA.xsd</xsl:attribute>
			<xsl:for-each select="root">
				<xsl:call-template name="agt:MapToDeterministic_CanAccA_var17_resultof_map">
					<xsl:with-param name="var16_current" select="."/>
				</xsl:call-template>
			</xsl:for-each>
		</root>
	</xsl:template>
</xsl:stylesheet>
